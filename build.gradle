plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'com.ywcheong'
version = '0.0.1-alpha'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 믿음의 Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Configuration 파일에서 IDE 지원
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 기초 개발 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // 기초 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Containerized 테스트를 위해
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.testcontainers:mongodb:1.19.0"
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'com.ywcheong.short4.codegen'
    generateClient = true
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('prepareDockerJar', Copy) {
    // 프로젝트 빌드
    dependsOn('bootJar')

    // 현재 버전 번호로 빌드된 Server의 <.jar> 파일을 <server.jar>로 이름 변경 후 docker 폴더로 복사
    from(layout.buildDirectory.dir("libs"))
    include("${rootProject.name}-${version}.jar")
    into(layout.buildDirectory.dir("docker"))
    rename { "server.jar" }
}